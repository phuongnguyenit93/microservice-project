spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/order_services
spring.datasource.username = root
spring.datasource.password = root

spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show_sql = true

server.port=8081

#Connect to Eureka Server
# user:user only work with httpBasic Spring Security
eureka.client.serviceUrl.defaultZone = http://user:user@localhost:8761/eureka
spring.application.name=order-service

# Enable circuit breaker endpoint in actuator
management.health.circuitbreakers.enabled=true
# Default is health endpoint
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j properties
# inventory is the name that will be use in @CircuitBreaker
# See different state of circuit breaker : Open , close , half-open
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# Number of fail request before going to OPEN state (Not open after 1 fail) and use as counting base
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED

# Time waiting at OPEN state before going to HALF-OPEN
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=10s

#At HALF-OPEN state . It will allow some number of calling and if Rate is > failure rate . It will go back to OPEN state
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50

resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true

#Resilience4j timeout properties
# inventory is the name that will be use in @TimeLimiter
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
resilience4j.timelimiter.instances.inventory.cancel-running-future=true

#Resilience4j Retry properties
# inventory is the name that will be use in @TimeLimiter
resilience4j.retry.instances.inventory.wait-duration=5s
resilience4j.retry.instances.inventory.max-attempts=3

#Spring cloud sleuth and zipkin
spring.zipkin.base-url=http://localhost:9411
# Send 100% trace to zipkin
spring.sleuth.sampler.probability=1.0
